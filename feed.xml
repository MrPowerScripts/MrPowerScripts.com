<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://mrpowerscripts.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://mrpowerscripts.com/" rel="alternate" type="text/html" /><updated>2020-05-02T13:23:36+00:00</updated><id>https://mrpowerscripts.com/feed.xml</id><title type="html">MrPowerScripts</title><subtitle>Learn. Code. Grow.</subtitle><entry><title type="html">Oh My Gosh turn your PWA into an Android app in the Google play store</title><link href="https://mrpowerscripts.com/pwa-to-apk-with-twa/" rel="alternate" type="text/html" title="Oh My Gosh turn your PWA into an Android app in the Google play store" /><published>2020-04-26T03:00:45+00:00</published><updated>2020-05-02T10:29:29+00:00</updated><id>https://mrpowerscripts.com/pwa-to-apk-with-twa</id><content type="html" xml:base="https://mrpowerscripts.com/pwa-to-apk-with-twa/">&lt;p&gt;Do you have a &lt;a href=&quot;https://en.wikipedia.org/wiki/Progressive_web_application&quot;&gt;Progressive Web App (PWA)&lt;/a&gt; that you would love to see in Google’s Android play store? You can make that happen today! With &lt;a href=&quot;https://github.com/GoogleChromeLabs/bubblewrap&quot;&gt;bubblewrap from GoogleChromeLabs&lt;/a&gt;. It is an experimental tool that &lt;a href=&quot;https://github.com/GoogleChromeLabs/bubblewrap/tree/master/packages/cli&quot;&gt;uses a CLI&lt;/a&gt; to process your PWA and generate an apk you can upload to the play store. Let’s look at how I did it for one of my sites. Now, mrpowerscripts.com isn’t a PWA… yet. But I have many other flat Jekyll sites that are progressive web apps.&lt;/p&gt;

&lt;h2 id=&quot;progressive-web-apps-look-like-native-apps&quot;&gt;Progressive Web apps look like native apps&lt;/h2&gt;

&lt;p&gt;You install a progressive web app through browsers like Chome. Not every browser supports PWAs yet, but support is growing. For instance, Firefox Mobile supports them, but Firefox Desktop, as of this date, does not. All you need to do to turn your website into a progressive web app is to add a manifest file with the details of your PWA and a service worker. Here is an example of my manifest.json file, which lives in the root of my site.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ThisIsMySiteOrPWAName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;short_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ThisIsShorter&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;theme_color&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#39a4cd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;background_color&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#fff&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;prefer_related_applications&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;display&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;standalone&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Scope&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;start_url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/?utm_source=a2hs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;icons&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;assets/img/favicon/manifest-icon-192.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;sizes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;192x192&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;image/png&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;assets/img/favicon/manifest-icon-512.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;sizes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;512x512&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;image/png&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Browsers will see this file and know that it should treat your site as a progressive web app. You also need to configure a service worker, which allows your PWA to have cool capabilities. Like offline viewing with caching, and push notifications. You know, like a native app! But this isn’t a howto on setting up a PWA. I’m assuming you already have one.&lt;/p&gt;

&lt;h2 id=&quot;the-bubblewrap-cli&quot;&gt;The bubblewrap CLI&lt;/h2&gt;

&lt;p&gt;Once you have a site that is working as a PWA, you can start using &lt;a href=&quot;https://github.com/GoogleChromeLabs/bubblewrap/tree/master/packages/cli&quot;&gt;the bubblewrap CLI&lt;/a&gt;. Now, this may feel a bit overwhelming but stay with me here. Here are the commands you need to run to turn the PWA into an APK. &lt;code class=&quot;highlighter-rouge&quot;&gt;bubblewrap init --manifest https://example.com/manifest.json&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;bubblewrap build&lt;/code&gt;. That’s it? That’s it. The bubblewrap CLI tool pulls in your PWA manifest file information and uses it to initialize the project. It might be a good idea to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;--directory=&lt;/code&gt; on the init as well, so it keeps everything in a folder for you. Then you can turn that folder into a git repo and track the changes. The &lt;code class=&quot;highlighter-rouge&quot;&gt;bubblewrap build&lt;/code&gt; command takes the initialized project and uses it to build an Android APK. From there, you can treat it as a standard Android APK file. Like uploading it to the play store.&lt;/p&gt;

&lt;p&gt;Now, if you went to look at the repo, you’ll notice that there is a bit of setup because of dependencies. But it seems like this is a relatively new project that has a lot of ongoing work, so I think the dependencies will be managed better in the future. The great thing is that it works now! If you have any issues setting it up pop into &lt;a href=&quot;https://bit.ly/mrps-discord&quot;&gt;Discord&lt;/a&gt; and get help.&lt;/p&gt;

&lt;h2 id=&quot;this-works-thanks-to-trusted-web-activity&quot;&gt;This works thanks to Trusted Web Activity&lt;/h2&gt;

&lt;p&gt;Trusted web activity is an open way to verify trusted web content within an Android app. So, anything that is being opened by the mobile Chrome browser within an app. Sometimes you’ll see native apps can load web content in a browser. It’s still chrome, but apps use this feature of &lt;a href=&quot;https://developers.google.com/web/android/custom-tabs/implementation-guide&quot;&gt;Chrome Browser called Custom Tabs&lt;/a&gt;. This lets app developers make their apps open content in a browser without having to build a mobile browser themselves. It’s very convenient, and our generated APK file basically opens our PWA right into a Chrome Custom Tab instance. Then TWA tells the browser that the content is from the same developer as the app. How does the browser know that the website it’s opening is a TWA? It does this by creating a Digital Asset Links file, which like the manifest file, is accessible from your website. It would live here: &lt;code class=&quot;highlighter-rouge&quot;&gt;https://example.com/.well-known/assetlinks.json&lt;/code&gt; Here’s an example &lt;code class=&quot;highlighter-rouge&quot;&gt;assetlinks.json&lt;/code&gt; from &lt;a href=&quot;https://developers.google.com/web/android/trusted-web-activity/quick-start#creating-your-asset-link-file&quot;&gt;Google’s TWA Quickstart guide&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;relation&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;delegate_permission/common.handle_all_urls&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;target&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;namespace&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;android_app&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;package_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;com.appspot.pwa_directory&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;sha256_cert_fingerprints&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;FA:2A:03:CB:38:9C:F3:BE:28:E3:CA:7F:DA:2E:FA:4F:4A:96:F3:BC:45:2C:08:A2:16:A1:5D:FD:AB:46:BC:9D&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;4F:FF:49:FF:C6:1A:22:E3:BB:6F:E6:E1:E6:5B:40:17:55:C0:A9:F9:02:D9:BF:28:38:0B:AE:A7:46:A0:61:8C&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I created that file through a tool in their quickstart guide called &lt;code class=&quot;highlighter-rouge&quot;&gt;Peter's Asset Link Tool&lt;/code&gt;. You can &lt;a href=&quot;https://play.google.com/store/apps/details?id=dev.conn.assetlinkstool&amp;amp;hl=en&quot;&gt;download Peter’s Asset Link Tool&lt;/a&gt; from the Play store. After publishing a Beta version of the app to the play store and downloading it, I was able to use that tool to generate the &lt;code class=&quot;highlighter-rouge&quot;&gt;assetlinks.json&lt;/code&gt; file and add it to my site. So when the generated APK opens my PWA using Chrome, it knows that I made the app because of the fingerprint on my website. My content is therefor trusted and granted special abilities like being full screen in the custom tab. Otherwise, you would see the chrome toolbar at the top. Similar to when you see other native apps open a custom tab browser. So it’s a website disguised as a PWA disguised as a native app. It’s pretty cool!&lt;/p&gt;

&lt;p&gt;PWA’s brought a lot of power to websites on native devices, and TWA with fancy new tools is further blurring the line between web and native applications. In this case, I only need one code base and my responsive site works on Desktop, tablets, mobile devices, Play store, and many more interfaces thanks to simple web conventions.&lt;/p&gt;

&lt;p&gt;Try it out!&lt;/p&gt;</content><author><name>MrPowerScripts</name></author><category term="mrpowerscripts" /><summary type="html">Do you have a Progressive Web App (PWA) that you would love to see in Google’s Android play store? You can make that happen today! With bubblewrap from GoogleChromeLabs. It is an experimental tool that uses a CLI to process your PWA and generate an apk you can upload to the play store. Let’s look at how I did it for one of my sites. Now, mrpowerscripts.com isn’t a PWA… yet. But I have many other flat Jekyll sites that are progressive web apps.</summary></entry><entry><title type="html">U need 2 Iterate. You need to iterate. Iteration is necessary.</title><link href="https://mrpowerscripts.com/iteration/" rel="alternate" type="text/html" title="U need 2 Iterate. You need to iterate. Iteration is necessary." /><published>2020-04-25T03:00:45+00:00</published><updated>2020-04-28T20:23:38+00:00</updated><id>https://mrpowerscripts.com/iteration</id><content type="html" xml:base="https://mrpowerscripts.com/iteration/">&lt;p&gt;So I posted the &lt;a href=&quot;/best-blog-post-ever/&quot;&gt;best blog post ever&lt;/a&gt; the other day. And it challenged anyone who disagreed with the notion that it’s the best blog post to tell me why so that I could make it better. Now the point was to highlight two critical components to successful growth more so than profess that it’s the best blog post ever. I mean, is it REALLY the best blog post ever? Yes, obviously. It says so in the title, why wouldn’t it be true? But that isn’t the point of it.&lt;/p&gt;

&lt;p&gt;The point is that growth comes from iteration and feedback. And you need to keep doing that over and over again. When do you stop? Never. Unless you’ve built a video game about digging digital dirt blocks and sold it for 4 billion dollars. At that point, you’ve won the game. You can stop.&lt;/p&gt;

&lt;p&gt;The more often you iterate on some “thing,” and the more you analyze the results of that iteration and use it to guide future iterations, the better your future results could be. Oh my gosh, doesn’t that sound like machine learning? Oh my gosh, guess what? You’re a machine too! A squishy fleshy machine that may or may not enjoy watching SpongeBob Squarepants because that’s easier than failing over and over again. Computers don’t have an ego, so they’re a bit more open to the criticism.&lt;/p&gt;

&lt;p&gt;But that’s simply part of the iteration process. Fucking up a lot is a great way to find out what works best and what doesn’t. Every single time you identify a crosswalk or a bus in those Google ReCaptchas, you’re essentially judging a machine at how well it was able to guess the object.&lt;/p&gt;

&lt;p&gt;“oh, hello, random human. Look at all these traffic light pictures I’ve selected for you! aren’t they wonderful?”&lt;/p&gt;

&lt;p&gt;And then you correct the little machine robot tried its best, and Google uses that feedback to build a more reliable robot. Wonderful.&lt;/p&gt;

&lt;p&gt;Guess what machine? It’s the same for you. Want to get good at something. Start doing it. Try. Fail a lot. Keep trying. Learn from those mistakes. In the pursuit of perfection &lt;a href=&quot;https://blog.codinghorror.com/quantity-always-trumps-quality/&quot;&gt;quantity always trumps quality&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Want to be a great artist? Start drawing. Now. Find places you can share it online. Listen to that criticism. You don’t have to agree or accept everything. And that’s part of the challenge with feedback. Not all of it is good. But if you can learn how to dig through the feedback mountain, you learn to find the gems from it.  I still struggle with this a lot, but I know it’s the truth. Not everything is as simple as identifying a bus or a car in a picture. But with enough iterations, you’ll develop your intuitions, and those will help you figure out what sort of feedback can add or subtract value. Oh my goodness, the process of iteration and feedback loops works on learning how to receive feedback as well??&lt;/p&gt;

&lt;p&gt;And I think this idea of developing quick iteration and feedback loops is critical for successful growth across pretty much everything. If you’re a software company that can push updates and then receives feedback quickly from users - guess what? You’re going to develop much better software a lot faster than companies who can’t. Another thought - guess who is going to have a better jump shot? Someone who practices every day or practices once a week? Practice makes perfect isn’t a new concept. It’s been around long before any of us have bee been born. I’m going to throw three bits of info that I think is super important for growth.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Write shit down. Analyze yourself. Go back and read old things you wrote. Old songs you sang, pictures you drew, software you programmed, workout tapes you recorded. You get the picture. Can you spot things you can improve? Can you build a better version of your past works? Test yourself often. Stay sharp.&lt;/li&gt;
  &lt;li&gt;Find people who share your growth interests. I have people from all kinds of backgrounds who I regularly contact for feedback, and when they come to me, I provide the same assistance. One of the areas I reach out to friends about is design. I’m a terrible designer, but I’m worlds ahead of where I was years ago. Thanks to the time they shared with me providing critical feedback in their area of expertise.&lt;/li&gt;
  &lt;li&gt;Build your intuitions. When you’ve iterated enough on something, your brain will develop shortcuts. It can happen with hobbies, career skills, whatever. You won’t have to think as much to perform them efficiently. You will find yourself in a &lt;a href=&quot;/mindfulness-meditation-flow/&quot;&gt;state of flow&lt;/a&gt; that allows you to jump in and complete tasks without wasted effort. That is where you want to find yourself, and you do it through iterating and analyzing those results to improve the next attempt.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can learn a lot from yourself and others, but when you begin feeling confident in taking action, that’s when the real fun begins. But to get there, and achieve excellent results, sometimes it takes a bit of luck. But even luck can’t save you if you don’t try.&lt;/p&gt;</content><author><name>MrPowerScripts</name></author><category term="mrpowerscripts" /><summary type="html">So I posted the best blog post ever the other day. And it challenged anyone who disagreed with the notion that it’s the best blog post to tell me why so that I could make it better. Now the point was to highlight two critical components to successful growth more so than profess that it’s the best blog post ever. I mean, is it REALLY the best blog post ever? Yes, obviously. It says so in the title, why wouldn’t it be true? But that isn’t the point of it.</summary></entry><entry><title type="html">This is the best blog post ever</title><link href="https://mrpowerscripts.com/best-blog-post-ever/" rel="alternate" type="text/html" title="This is the best blog post ever" /><published>2020-03-22T03:00:45+00:00</published><updated>2020-04-26T13:55:17+00:00</updated><id>https://mrpowerscripts.com/best-blog-post-ever</id><content type="html" xml:base="https://mrpowerscripts.com/best-blog-post-ever/">&lt;p&gt;Do you disagree? Okay, I know you haven’t read it yet, but you probably had some preconceived idea that it wasn’t - didn’t you? A small bit of bias? None? You didn’t even weigh the possibility a bit? Well, if you don’t think it is - Why not? What doesn’t it have?&lt;/p&gt;

&lt;p&gt;See, here’s the thing about this blog post. It isn’t afraid of change. It’s a living document. It &lt;a href=&quot;https://github.com/MrPowerScripts/MrPowerScripts.com/blob/master/_posts/2020-03-22-best-blog-post-ever.md&quot;&gt;lives here in GitHub&lt;/a&gt;, where it is committed to being the best blog post ever. So if it isn’t, tell me why. You can do it here on &lt;a href=&quot;http://bit.ly/mrps-discord&quot;&gt;Discord&lt;/a&gt;, &lt;a href=&quot;https://github.com/MrPowerScripts/MrPowerScripts.com/issues&quot;&gt;GitHub&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/MrPowerScripts&quot;&gt;Twitter&lt;/a&gt;, or even by &lt;a href=&quot;mailto:playingwithpowershell@gmail.com&quot;&gt;e-mail&lt;/a&gt;. This blog post can take on the challenge. This blog post isn’t afraid to be the best. This blog post IS the best.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;</content><author><name>MrPowerScripts</name></author><category term="mrpowerscripts" /><category term="productivity" /><category term="automation" /><summary type="html">Do you disagree? Okay, I know you haven’t read it yet, but you probably had some preconceived idea that it wasn’t - didn’t you? A small bit of bias? None? You didn’t even weigh the possibility a bit? Well, if you don’t think it is - Why not? What doesn’t it have?</summary></entry><entry><title type="html">Automate Simple Static Website Testing</title><link href="https://mrpowerscripts.com/automate-static-site-testing/" rel="alternate" type="text/html" title="Automate Simple Static Website Testing" /><published>2020-03-14T03:00:45+00:00</published><updated>2020-04-26T13:55:17+00:00</updated><id>https://mrpowerscripts.com/automate-static-site-testing</id><content type="html" xml:base="https://mrpowerscripts.com/automate-static-site-testing/">&lt;p&gt;I like using Jekyll to build static websites when I can. A static website is a site built with simple HTML, CSS, and Javascript. Ready to be served up by webservers. Jekyll is one of the many frameworks that help create static websites by using nifty features like templating, and an embedded development server.&lt;/p&gt;

&lt;p&gt;These static site generators can’t prevent you from writing bad structure to your HTML other potential problems. You can have borked syntax or bad links throughout the generated website source code that may go undeteceted. Even JSON files can also be generated with invalid syntax very easily. And there’s plenty of tools to help you avoid shipping that crappy code live. Plus…&lt;/p&gt;

&lt;p&gt;ALL. OF. THIS. CAN. BE. AUTOMATED.&lt;/p&gt;

&lt;p&gt;YAY&lt;/p&gt;

&lt;p&gt;We’re going to use a few tools that other people have written, and that’s the easiest part about this whole thing. First thing is test all of the JSON files that my site generates using &lt;code class=&quot;highlighter-rouge&quot;&gt;jsonlint&lt;/code&gt; combined with a command that finds all of the JSON files in the site directory tree.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;FILES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;find ./_site &lt;span class=&quot;nt&quot;&gt;-type&lt;/span&gt; f &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'*.json'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$FILES&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; jsonlint &lt;span class=&quot;nv&quot;&gt;$FILES&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The code above uses the &lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt; command to locate all the JSON files in the directory, and displays them on the screen, and then passes them to &lt;code class=&quot;highlighter-rouge&quot;&gt;jsonlint&lt;/code&gt;, which will validate that all of the files are good whomesome JSON like Mom used to make.&lt;/p&gt;

&lt;p&gt;Great. So now we know our JSON isn’t screwed up. We can make sure that all of the site HTML is well-formed as well. We’ll use a tool called &lt;code class=&quot;highlighter-rouge&quot;&gt;htmlproofer&lt;/code&gt; which can check the integrity of the produced site. You can see everything it tests &lt;a href=&quot;https://github.com/gjtorikian/html-proofer&quot;&gt;here on their repo&lt;/a&gt;. I run the command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;htmlproofer ./_site &lt;span class=&quot;nt&quot;&gt;--check-html&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--disable-external&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--check-opengraph&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--check-favicon&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The first time I tried &lt;code class=&quot;highlighter-rouge&quot;&gt;htmlproofer&lt;/code&gt; on one of my Jekyll sites, it found over 300 errors. It took me a while to fix all of the broken issues with my HTML, but &lt;code class=&quot;highlighter-rouge&quot;&gt;htmlproofer&lt;/code&gt; helped me test it very quickly as I was updating the code.&lt;/p&gt;

&lt;p&gt;Next, this isn’t really testing, but sometimes allowing the wrong sizes of images to get through can provide a poor user experience. So why not automate preventing that? We can do that with the &lt;code class=&quot;highlighter-rouge&quot;&gt;mogrify&lt;/code&gt; command from the &lt;a href=&quot;https://imagemagick.org/script/download.php&quot;&gt;ImageMagick toolset&lt;/a&gt;. I use the command below on one of my sites to make sure images are no larger than 500px on either side, and this will resize them if they are, which helps make sure image file sizes are smaller.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find ./_site/assets/img/ &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'*.jpg'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-execdir&lt;/span&gt; mogrify &lt;span class=&quot;nt&quot;&gt;-resize&lt;/span&gt; 500x &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But sometimes that isn’t enough to get the file sizes down to a reasonable level. We can use the &lt;code class=&quot;highlighter-rouge&quot;&gt;jpegoptim&lt;/code&gt; command to enforce that image files are under a specific file size, and automatically optimize the image to fit within that limit. The command below grabs all image files in a folder and reduces their sizes to below 70k.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find ./_site/assets/img &lt;span class=&quot;nt&quot;&gt;-type&lt;/span&gt; d &lt;span class=&quot;nt&quot;&gt;-exec&lt;/span&gt; sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ls &quot;$0&quot;/*.jpg 2&amp;gt;/dev/null &amp;amp;&amp;amp; jpegoptim --size=70k --max=90 --all-progressive --strip-all -t &quot;$0&quot;/*.jpg'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then you can automate all of that using devops tools like CircleCI for testing and trimming your source before it gets deployed somewhere, like GitHub pages, which is where this blog lives. Every commit I push to update the website automatically gets validated through CircleCI using the tools above. The CircleCI config with test and deploy jobs make sure the site is validated every single time I make a change before it gets deployed live — no more shipping sites with tons of broken code that can hurt SEO or the user’s experience.&lt;/p&gt;

&lt;script src=&quot;http://gist-it.appspot.com/http://github.com/MrPowerScripts/MrPowerScripts.com/blob/master/.circleci/config.yml&quot;&gt;&lt;/script&gt;

&lt;p&gt;When I pushed the change that contained this blog post &lt;a href=&quot;https://circleci.com/gh/MrPowerScripts/MrPowerScripts.com/298&quot;&gt;it actually hit an error&lt;/a&gt; because I added a &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&lt;/code&gt; where it can break site formatting. The CircleCI job failed and the site was not deployed. I was able to fix the site code and &lt;a href=&quot;https://circleci.com/workflow-run/852b83a1-84ec-425a-823b-c5032b288265&quot;&gt;push a new commit&lt;/a&gt; where it was validated as successful and the site was deployed successfully.&lt;/p&gt;

&lt;p&gt;We could take the website optimization a few steps further by using tools that help minimize the site source code or run SEO checks. But using these simple tools drastically improved the confidence of the code I was shipping out.&lt;/p&gt;</content><author><name>MrPowerScripts</name></author><category term="mrpowerscripts" /><category term="productivity" /><category term="automation" /><summary type="html">I like using Jekyll to build static websites when I can. A static website is a site built with simple HTML, CSS, and Javascript. Ready to be served up by webservers. Jekyll is one of the many frameworks that help create static websites by using nifty features like templating, and an embedded development server.</summary></entry><entry><title type="html">How I orgaize my life with apps</title><link href="https://mrpowerscripts.com/calendar-contacts-tasks/" rel="alternate" type="text/html" title="How I orgaize my life with apps" /><published>2020-03-11T03:00:45+00:00</published><updated>2020-04-28T20:23:38+00:00</updated><id>https://mrpowerscripts.com/calendar-contacts-tasks</id><content type="html" xml:base="https://mrpowerscripts.com/calendar-contacts-tasks/">&lt;p&gt;I do a lot of stuff. Like, I should probably chill out a bit, but I can’t. I have a lot of passions, and they keep me super busy. I work an (almost) full-time job at a tech startup for the moment. Anyone that has worked for a startup knows that there’s an endless amount of work that needs to be done and usually not enough people to do it.&lt;/p&gt;

&lt;p&gt;Thankfully, I’ve been there for a couple of years. I know how to do my job reasonably efficiently. But I also have my side projects. This blog, the youtube channel that goes with it, (okay I haven’t updated either of them in a long time - but I think about them! does that count?). I have some other websites that I work on, which i’m trying to grow, and I have people helping with them. I manage and run a bunch of performance related events in the city where I live, which takes quite a bit of time coordinating with venues and performers. Plus other hobbies like playing basketball, video games, working on short films, helping friends with their projects. On top of all the essentials - laundry, making meals.&lt;/p&gt;

&lt;p&gt;I’m always so. fuckin. busy. The honest solution is that I should chill out a bit and drop some of these things. But I’m way too stubborn to do that. So, I have to use simple tricks that help me keep o top of everything. And that’s the key for me. The methods I use are SIMPLE. A complicated system of organization only adds to the chaos for me. So everything I’m about to list most likely won’t blow anyone away, but they truly help me out a lot in keeping track of what I need to be doing.&lt;/p&gt;

&lt;p&gt;HERE IS THE (short) LIST OF SIMPLE TRICKS&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Calendar. I use Google calendar. If it’s not on the calendar - it doesn’t matter. I don’t put frivolous things on my calendar. I don’t need a reminder to feed the cat every day. The cat does that just fine. When I wake up, I look at the calendar widget on the home screen of my phone. It tells me everything I NEED to be concerned with that day. But I also look at the coming days to help decide how I should spend currently available free time, and having few items as possible makes it easier to do that. Some people might feel the need to “block off that time for everything”. No thanks. I don’t want a cluttered calendar with my entire day planned out to the minute. I want as few things on the schedule as possible. My key to success here is to be aware of what is coming up and utilize the free spaces effectively in the moments they become available. When my calendar is lean, it’s easier to see what is coming up today, tomorrow, and the next day. And it allows me the flexibility to manage my free time in the moment, which includes preparing for things coming up in the near term. Some people enjoy micromanaging their time, but I prefer to spend as little time in the calendar app as possible. With a quick swipe, I can see a couple of days of things that are important for me to be aware of, and I decide when/how to prepare for those events in the gaps between them.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Whatsapp. I use WhatsApp as my primary means of communication. As pretty much everyone else does in Europe. But I use it more or less as a task list for things related to other people. You can very easily archive conversations, so I use that feature often. If I’m done communicating with someone, and there’s no follow up needed - the conversation gets archived. So my conversation list is very often empty when I open the app. I often see people with a gigantic list of conversations, and because of my system, it drives me bonkers. If I need to reply to a person about something, if I need to follow up with them in any way - the conversation stays open. Otherwise, everyone gets archived.  So I treat Whatsapp as a task list for other people primarily. Sometimes I’ll have a name there for a couple of days if there’s a long-running follow-up. It happens. But making this a habit allows me to focus better and not drop the ball on doing things for other people. Again, it also keeps reminders and events off my calendar. That’s a place for things that most concern me. Whatsapp is a task list for matters related to other people.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;An actual “to-do list”. I use an app with a widget on my phone’s home screen that’s called “to-do list”. Amazing - I know. The to-do list is where I put things that aren’t time-sensitive like small side projects I would like to create or ideas I should look into when I have some free time. Something that I can follow up on in those moments between calendar items. And when they get done - I check quickly knock them off the list. It could be a blog post idea or a video idea.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Those are a few basic techniques I use to stay on top of things for myself and others. I may have other things I’m not thinking of at the moment. But if I think of anything else I’ll add it to my to-do list and be sure to update this blog post in the future when I have some free time :)&lt;/p&gt;</content><author><name>MrPowerScripts</name></author><category term="mrpowerscripts" /><category term="productivity" /><summary type="html">I do a lot of stuff. Like, I should probably chill out a bit, but I can’t. I have a lot of passions, and they keep me super busy. I work an (almost) full-time job at a tech startup for the moment. Anyone that has worked for a startup knows that there’s an endless amount of work that needs to be done and usually not enough people to do it.</summary></entry><entry><title type="html">Advanced function parameters in Powershell</title><link href="https://mrpowerscripts.com/advanced-function-parameters-in-powershell/" rel="alternate" type="text/html" title="Advanced function parameters in Powershell" /><published>2019-08-02T03:00:45+00:00</published><updated>2020-04-26T13:55:17+00:00</updated><id>https://mrpowerscripts.com/advanced-function-parameters-in-powershell</id><content type="html" xml:base="https://mrpowerscripts.com/advanced-function-parameters-in-powershell/">&lt;p&gt;If you’re not making use of functions in your Powershell code then you need to stop what you’re doing right now and learn about them! But where?!? Oh, click the video below and watch. That will get you started. &lt;!-- (1) video wrapper --&gt;&lt;/p&gt;
&lt;div class=&quot;youtube-video&quot; data-embed=&quot;qz0x_WL8ueo&quot;&gt; 
 
    &lt;!-- (2) the &quot;play&quot; button --&gt;
    &lt;div class=&quot;play-button&quot;&gt;&lt;/div&gt; 
     
&lt;/div&gt;
&lt;p&gt;That’s awesome! Now you know what functions are! Exciting! But after you’ve made a function you’ll probably want to adapt it a bit. Reusability of code without some customization is super limiting. Next you’ll want to learn how to add parameters to your functions. By adding parameters to your functions you’ll unlock the true power of functions in Powershell! Thankfully the video below will get you up to speed on function parameters in powershell. Then you’re ready for the advanced stuff!&lt;/p&gt;

&lt;!-- (1) video wrapper --&gt;
&lt;div class=&quot;youtube-video&quot; data-embed=&quot;RW2tRebxqzQ&quot;&gt; 
 
    &lt;!-- (2) the &quot;play&quot; button --&gt;
    &lt;div class=&quot;play-button&quot;&gt;&lt;/div&gt; 
     
&lt;/div&gt;

&lt;p&gt;So now you know what functions are in Powershell, and you’ve learned a few ways to add parameters to them. But if you create your Powershell functions without some of the advanced Powershell function parameter techniques you might be setting yourself up for future disaster! Leading you or others using your code to end up in an endless pit of darkness and dispair.&lt;/p&gt;

&lt;p&gt;Here are a few reasons why you would want to use advanced powershell function parameters:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Control the types of arguments passed into functions. If someone puts an string into a function when it should be an integer Powershell will automatically warn them.&lt;/li&gt;
  &lt;li&gt;Flags allow you to modify a powershell functions behavior without users needing to supply a parameter.&lt;/li&gt;
  &lt;li&gt;Create help messages for your parameters so that users will know how to use them appropriately&lt;/li&gt;
  &lt;li&gt;Configure some parameters to be mandatory and prevent the function from running if it is unused&lt;/li&gt;
  &lt;li&gt;Add validation to the arguments passed into the function. Only want the user to enter a number between 1 and 100? You can enforce that. Do you want to control whether they can pass in a null value, or empty string? You can validate for that as well. You can even validate the argument using a regex string.&lt;/li&gt;
  &lt;li&gt;Control whether or not an argument can be passed into the function through the powershell Pipleline.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These are a few of the benefits, and there are even more! Adding some of these advanced powershell function parameter techniques can seriously improve the reliablity and reusability of your functions. Check out the video below to see some of the benefits in action!&lt;/p&gt;

&lt;!-- (1) video wrapper --&gt;
&lt;div class=&quot;youtube-video&quot; data-embed=&quot;6ySxsnOGnCU&quot;&gt; 
 
    &lt;!-- (2) the &quot;play&quot; button --&gt;
    &lt;div class=&quot;play-button&quot;&gt;&lt;/div&gt; 
     
&lt;/div&gt;</content><author><name>MrPowerScripts</name></author><category term="mrpowerscripts" /><category term="powershell function parameters" /><category term="advanced powershellfunction parameters" /><category term="functions in powershell" /><category term="powershell functions." /><summary type="html">If you’re not making use of functions in your Powershell code then you need to stop what you’re doing right now and learn about them! But where?!? Oh, click the video below and watch. That will get you started. That’s awesome! Now you know what functions are! Exciting! But after you’ve made a function you’ll probably want to adapt it a bit. Reusability of code without some customization is super limiting. Next you’ll want to learn how to add parameters to your functions. By adding parameters to your functions you’ll unlock the true power of functions in Powershell! Thankfully the video below will get you up to speed on function parameters in powershell. Then you’re ready for the advanced stuff!</summary></entry><entry><title type="html">How to get around the jekyll-pagination-v2 limitation of GitHub pages with CircleCI</title><link href="https://mrpowerscripts.com/github-pages-circleci-jekyll-paginate-v2/" rel="alternate" type="text/html" title="How to get around the jekyll-pagination-v2 limitation of GitHub pages with CircleCI" /><published>2019-07-28T11:00:45+00:00</published><updated>2020-04-26T13:55:17+00:00</updated><id>https://mrpowerscripts.com/github-pages-circleci-jekyll-paginate-v2</id><content type="html" xml:base="https://mrpowerscripts.com/github-pages-circleci-jekyll-paginate-v2/">&lt;p&gt;Github pages is a damn modern marvel. You can put together a basic website hosted for free from a jazillion templates available on the internet. Buy a domain name. You’re set. Push up changes to the source on GitHub and they regenerate the site. AMAZING. Almost as good as geocities was. But using GitHub pages the way GitHub suggests has some limitations. Jekyll has soooo many helpful plugins that you can use outside of the oens offered on GitHub pages. Such as the &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll-paginate-v2&lt;/code&gt; plugin. And if you want to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll-paginate-v2&lt;/code&gt; plugin with GitHub pages you’re out of luck! They don’t support it. Which means you can’t do pagniation of collections - a very useful feature when you want to build more complex websites or blogs using jekyll. But we can work around this with a bit of scripting and CircleCI.&lt;/p&gt;

&lt;p&gt;If you want to know all of the technical details of the script then check out the &lt;a href=&quot;http://sangsoonam.github.io/2019/02/08/using-git-worktree-to-deploy-github-pages.html&quot;&gt;blog post by Sangsoo Nam&lt;/a&gt; which inspired me to automate this. It’s really well written and explains the mechanics better than I could. But to catch you up we basically configure our GitHub pages site to use two separate branches. One branch will contain the source code of our jekyll site. Typically the branch would be the defaul &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; branch, and we push our site changes to this branch. This will kick off a job on CircleCI which uses the latest version of jekyll and all of it’s available plugins to generate the site source code. Then it automagically pushes that generated source code back up to our GitHub pages branch which is typically &lt;code class=&quot;highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt;. Then the GitHub repo is configured to serve up the freshly baked source code right from the CircleCI oven to your users. So now we’re not limited to using the hosted version of jekyll and limited set of allowed plugins. WE CAN USE ANYTHING. FREEDOM.&lt;/p&gt;

&lt;script src=&quot;https://gist-it.appspot.com/http://github.com/MrPowerScripts/MrPowerScripts.com/blob/master/.circleci/config.yml&quot;&gt;&lt;/script&gt;

&lt;p&gt;And since we can use anything I decided to add some testing to the site. Before I had the testing I didn’t realize how many things were broken. A ruby gem called &lt;code class=&quot;highlighter-rouge&quot;&gt;html-proofer&lt;/code&gt; found over 250 errors with my site! Yikes. Even some very broken stuff that broke the site for search engines which hurts the SEO on the pages. Now that we’re running on CircleCI we can add simple checks to the generated site before we deploy it. So first I used &lt;code class=&quot;highlighter-rouge&quot;&gt;html-proofer&lt;/code&gt; which lints all of sites html structure. Finding broken html structure and bad practices. It even has an option to lint your opengraph structure. Another thing I wanted to check was some generated json files that I use as an API. I use &lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt; to create a list of all the json files in the site source. Then I pass them into another ruby gem called &lt;code class=&quot;highlighter-rouge&quot;&gt;jsonlint&lt;/code&gt; which makes sure the json structure is corect before the site gets deployed. At the end you can see that it makes an API call to CloudFlare to purge the cache. You don’t need to add this but CLoudFlare is really good and can help speed up the site. They have a free tier that will work for pretty much any GitHub pages site.&lt;/p&gt;

&lt;p&gt;So all the magic here is thanks to CircleCI. Basically when we push a commit it spins up a CI job that performs the deployment steps outlined win Sansoo’s blog post. Which you know about now since you went to read it. But to give the tl;dr of the whole process again: When we push a commit to GitHub it triggers a job on CircleCI. Using the config above in the site repo CircleCI will checkout the code from &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;. Then compile our fresh jekyll website using the latest version of jekyll and whatever plugins we need. In my case it was the &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll-paginate-v2&lt;/code&gt; plugin. Then it runs tests to make sure the site structure and json APIs aren’t broken. Finally, that freshly compiled site gets pushed back up to the &lt;code class=&quot;highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; branch where GitHub will serve it up on GitHub pages. Cool.&lt;/p&gt;

&lt;p&gt;Other than all that it’s still pretty close to the original script. Except now the whole process is automated, so no need to manually push code twice.&lt;/p&gt;</content><author><name>MrPowerScripts</name></author><category term="mrpowerscripts" /><category term="CircleCI automation" /><category term="Cloudflare" /><category term="improve website speed" /><category term="website speed tips" /><category term="Cloudflare caching" /><category term="jekyll-paginate-v2" /><category term="jekyll pagniation" /><category term="github pages pagniation" /><category term="github pages paginiation v2" /><category term="github pages" /><category term="circleci github pages" /><summary type="html">Github pages is a damn modern marvel. You can put together a basic website hosted for free from a jazillion templates available on the internet. Buy a domain name. You’re set. Push up changes to the source on GitHub and they regenerate the site. AMAZING. Almost as good as geocities was. But using GitHub pages the way GitHub suggests has some limitations. Jekyll has soooo many helpful plugins that you can use outside of the oens offered on GitHub pages. Such as the jekyll-paginate-v2 plugin. And if you want to use the jekyll-paginate-v2 plugin with GitHub pages you’re out of luck! They don’t support it. Which means you can’t do pagniation of collections - a very useful feature when you want to build more complex websites or blogs using jekyll. But we can work around this with a bit of scripting and CircleCI.</summary></entry><entry><title type="html">How I made the MrPowerScripts.com website FAST on GitHub pages with Cloudflare and CircleCI</title><link href="https://mrpowerscripts.com/faster-github-pages-with-cloudflare-circleci/" rel="alternate" type="text/html" title="How I made the MrPowerScripts.com website FAST on GitHub pages with Cloudflare and CircleCI" /><published>2019-04-06T11:00:45+00:00</published><updated>2020-04-26T13:55:17+00:00</updated><id>https://mrpowerscripts.com/faster-github-pages-with-cloudflare-circleci</id><content type="html" xml:base="https://mrpowerscripts.com/faster-github-pages-with-cloudflare-circleci/">&lt;p&gt;The performance of my website recently tanked. On Google PageSpeed Insights I had a ~99 rating. I looked at it recently and it TANKED down to 44. 44! The whole point of this blog was to &lt;a href=&quot;https://www.youtube.com/watch?v=5YsFoEY7Ulo&amp;amp;list=PLqpaLALjc1lwz6nHCgsP98xYX_Ykawh3J&quot;&gt;journey into learning more about SEO&lt;/a&gt;. One of the most important metrics for Google Page rank and general SEO ranking is the speed of your website. 44 was unacceptable. I needed to change some things FAST to make the website FAST. I even have the charts to show how much faster it is. Wait until you see the results!&lt;/p&gt;

&lt;p&gt;Since the site &lt;a href=&quot;https://github.com/MrPowerScripts/MrPowerScripts.com&quot;&gt;is an open source repo hosted via GitHub Pages&lt;/a&gt; I have no control over server-side hosting decisions. Such as cache settings, and various other techniques that could help improve the performance to my website. Ya know what is really great for improving delivery of web assets? CDNs. Content Delivery Networks.&lt;/p&gt;

&lt;p&gt;In comes Cloudflare, one of the biggest CDNs on the web.  I didn’t do all the work to figure this out, to be honest. They posted their own &lt;a href=&quot;https://blog.cloudflare.com/secure-and-fast-github-pages-with-cloudflare/&quot;&gt;great blog post&lt;/a&gt; on how to set up their service in front of GitHub pages to cache ALL THE THINGS.  Once I configured MrPowerScripts.com on their service using the free plan all I had to do was update my name servers in NameCheap to use the ones they provided me. From there Cloudflare handled all of the caching and requests to the site. Dramatically reducing the page size and loading time.  Check the results for yourself:&lt;/p&gt;

&lt;div&gt;
  &lt;img style=&quot;object-fit: contain&quot; src=&quot;/images/mrps-fast/page-size.png&quot; alt=&quot;image&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;First off, the size of the page download is MUCH smaller. It went from ~1.5MB to ~205KB. That’s HUGE. The entire website size was reduced by over 1MB. Also, check out the number of requests needed to render the site. It went from around 38 requests to about 15. Yeah, it cut the number of requests by more than half. Amazing! All of that lead to the following chart.&lt;/p&gt;

&lt;div&gt;
  &lt;img style=&quot;object-fit: contain&quot; src=&quot;/images/mrps-fast/page-timings.png&quot; alt=&quot;image&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Previously, the entire site took more than 4 seconds to load. Now, that doesn’t mean 4 seconds to see things on the page. It just means for the entire site to finish loading. Including various background requests. Now, the entire site loads in less than a second. These are amazing results! Cloudflare has allowed me to cache all site assets, and to keep them cached for up to 8 days. Then, the caches will be purged.&lt;/p&gt;

&lt;p&gt;This creates a problem though. What if I update the website? Cloudflare will deliver the cached website they have stored rather than the latest updates i’ve pushed to GitHub Pages. Cloudflare has a nice API though, so i’ve connected CircleCI to my GitHub repository to run a job every time a push a commit. That job sends an API request to Cloudflare telling it to clear out the cache. The next person that visits the site will see the latest version of it, and Cloudflare will rebuild the cache. You can see &lt;a href=&quot;https://github.com/MrPowerScripts/MrPowerScripts.com/blob/f41b5b2a8d51b5f80f4d7da9bab33368d3b602c3/.circleci/config.yml&quot;&gt;the CircleCI config file here&lt;/a&gt; with the api call that perfoms the cache clearing. CircleCI has a generous open source plan (it’s free. that’s pretty generous). Now this isn’t perfect. It could be optimized to only purge the cache of certain pages, but it works for my simple little blog.&lt;/p&gt;

&lt;p&gt;None of this costs me any money since i’m using the free tier of each application, and now my website is SUPER FAST once again.&lt;/p&gt;

&lt;p&gt;If you want to see some more stats on the site improvements you can &lt;a href=&quot;https://gtmetrix.com/reports/mrpowerscripts.com/S4kSarB8&quot;&gt;check out the live results I pulled the graphs from&lt;/a&gt;.&lt;/p&gt;</content><author><name>MrPowerScripts</name></author><category term="mrpowerscripts" /><category term="CircleCI automation" /><category term="Cloudflare" /><category term="improve website speed" /><category term="website speed tips" /><category term="Cloudflare caching" /><category term="Cloudflare website speed" /><summary type="html">The performance of my website recently tanked. On Google PageSpeed Insights I had a ~99 rating. I looked at it recently and it TANKED down to 44. 44! The whole point of this blog was to journey into learning more about SEO. One of the most important metrics for Google Page rank and general SEO ranking is the speed of your website. 44 was unacceptable. I needed to change some things FAST to make the website FAST. I even have the charts to show how much faster it is. Wait until you see the results!</summary></entry><entry><title type="html">CircleCI Nick Young meme for your overconfident developers</title><link href="https://mrpowerscripts.com/CircleCI-nick-young-meme/" rel="alternate" type="text/html" title="CircleCI Nick Young meme for your overconfident developers" /><published>2019-03-30T10:00:45+00:00</published><updated>2020-04-26T13:55:17+00:00</updated><id>https://mrpowerscripts.com/CircleCI-nick-young-meme</id><content type="html" xml:base="https://mrpowerscripts.com/CircleCI-nick-young-meme/">&lt;p&gt;Do you have overconfident devs on your team pushing up code and calling it a day? Only to find out their jobs failed on CircleCI? Now you have something to send them to let them know it isn’t time to celebrate until the job is green! Check out the full post for the video with sound and the giphy.&lt;/p&gt;

&lt;div style=&quot;width:100%;height:0;padding-bottom:56%;position:relative;&quot;&gt;&lt;iframe src=&quot;https://giphy.com/embed/vxr7x3PYRSSGdXfTTA&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;position:absolute&quot; frameborder=&quot;0&quot; class=&quot;giphy-embed&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;

&lt;p&gt;If you want to get the full experience with sound you can check it out on youtube below.&lt;/p&gt;

&lt;!-- (1) video wrapper --&gt;
&lt;div class=&quot;youtube-video&quot; data-embed=&quot;RNtFTLV2Fog&quot;&gt; 
 
    &lt;!-- (2) the &quot;play&quot; button --&gt;
    &lt;div class=&quot;play-button&quot;&gt;&lt;/div&gt; 
     
&lt;/div&gt;

&lt;p&gt;You can also share the gif easy with this link: &lt;a href=&quot;https://gph.is/g/4z9AGwZ&quot;&gt;https://gph.is/g/4z9AGwZ&lt;/a&gt;&lt;/p&gt;</content><author><name>MrPowerScripts</name></author><category term="mrpowerscripts" /><category term="CircleCI Meme" /><category term="Develops memes" /><category term="nick young meme" /><summary type="html">Do you have overconfident devs on your team pushing up code and calling it a day? Only to find out their jobs failed on CircleCI? Now you have something to send them to let them know it isn’t time to celebrate until the job is green! Check out the full post for the video with sound and the giphy.</summary></entry><entry><title type="html">Microsoft Excel Automation with Powershell</title><link href="https://mrpowerscripts.com/microsoft-excel-automation-powershell/" rel="alternate" type="text/html" title="Microsoft Excel Automation with Powershell" /><published>2019-03-24T11:00:45+00:00</published><updated>2020-04-26T13:55:17+00:00</updated><id>https://mrpowerscripts.com/microsoft-excel-automation-powershell</id><content type="html" xml:base="https://mrpowerscripts.com/microsoft-excel-automation-powershell/">&lt;p&gt;Do you want to take your Excel skills to the next level? Did you know that you don’t need Excel to work with Excel files? Sometimes doing things programmatically is a bit easier than pointing and clicking. Or maybe you need to process a lot of files really fast, over and over again. Powershell automation with Microsoft Excel is possible! &lt;!-- (1) video wrapper --&gt;&lt;/p&gt;
&lt;div class=&quot;youtube-video&quot; data-embed=&quot;3blgg3QfJP8&quot;&gt; 
 
    &lt;!-- (2) the &quot;play&quot; button --&gt;
    &lt;div class=&quot;play-button&quot;&gt;&lt;/div&gt; 
     
&lt;/div&gt;
&lt;p&gt;In this video you’ll see how you can update Excel workbooks and worksheets with a Powershell script.&lt;/p&gt;

&lt;p&gt;Excel has a COM interface which is a technology developed by Microsoft  (of course). I’ve never read an amazing explanation of COM but basically, it allows communication between programming languages and Windows applications. Even if the application was not built with the programming language. Powershell is more of a scripting language, but we can connect to the Excel COM interface all the same.&lt;/p&gt;

&lt;p&gt;Through this COM interface Excel exposes &lt;a href=&quot;https://docs.microsoft.com/en-us/office/vba/api/overview/excel/object-model&quot;&gt;the Excel Object Model&lt;/a&gt;. I’ve linked you to the current docs, but that link will probably be dead in six months - because Microsoft. Also, the examples shown  for the Excel Object Model use something called Visual Basic for Applications. Which is something I learned about 5 minutes ago when I was trying to find the old generic Excel Object Model reference. Apparently it doesn’t exist anymore. Once again, because Microsoft. I wish I could offer more help and insights but - Microsoft. Still, you can use the script below to play around with creating and updating workbooks and worksheets. You can also explore the properties of the excel object with &lt;code class=&quot;highlighter-rouge&quot;&gt;Get-Member&lt;/code&gt; to learn more about the available options.&lt;/p&gt;

&lt;p&gt;You can &lt;a href=&quot;https://github.com/MrPowerScripts/PowerScripts/blob/16740162b415b9d91f9d4bbd930b2a6d33de1788/Excel/WorkbooksAndWorksheetsExcel.ps1&quot;&gt;find the file here on GitHub&lt;/a&gt; or check out the source below.&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#None of this will work through an already open excel application&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#You must open Excel and workbooks you want to manipulate via the COMobject&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;####################################################&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;############### Starting Excel #####################&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;####################################################&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;New-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ComObject&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Excel.Application&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Visible&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;DisplayAlerts&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$false&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;####################################################&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;############## Working with Workbooks ##############&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;####################################################&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Add a workbook to your current excel file&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#You can add multiple workbooks with this method&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Workbooks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Find all the workbooks in your excel file by name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Workbooks&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Select-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ExpandProperty&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Activate a specifc workbook in your excel file&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Workbooks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Workbooks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;book1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Acivate Random Workbook in Excel file&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Workbooks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Get-Random&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-min&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Max&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Workbooks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Open an existing workbook on your hardrive&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Workbooks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;userprofile&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;\desktop\mrpowerscripts.xlsx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#close workbooks from an excel file&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Workbooks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Workbooks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MrPowerScripts.xlsx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Save workbooks to the hard drive&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Workbooks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SaveAs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;userprofile&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;\Desktop\asdf.xlsx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;


&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;####################################################&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;########### Working with Worksheets ################&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;####################################################&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#These bits of code will affect the active Workbook.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Add a worksheet to your active workbook&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Worksheets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Find all worksheets in your active workbook&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Worksheets&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Select-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ExpandProperty&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Change name of worksheet in workbook&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Worksheets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;potato&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Worksheets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;potato&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;spud&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Activate specific worksheet in workbook&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Worksheets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Worksheets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sheet3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Acivate Random Worksheet in Excel file&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Worksheets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Get-Random&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-min&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Max&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Worksheets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Delete worksheets from workbook&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Worksheets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Worksheets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Sheet3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;


&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;####################################################&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;########## Cleaning up the environment #############&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;####################################################&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Workbooks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Quit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Check and you will see an excel process still exists after quitting&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Remove the excel process by piping it to stop-process&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Get-Process&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;excel&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Stop-Process&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Force&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Now we must release the $excel com object to ready it for garbage collection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;System.Runtime.Interopservices.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Marshal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ReleaseComObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Excel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>MrPowerScripts</name></author><category term="mrpowerscripts" /><category term="Microsoft Excel Automation" /><category term="Microsoft Excel Powershell Automation. Automation with Powershell" /><category term="Powershell Excel workbooks and worksheets" /><summary type="html">Do you want to take your Excel skills to the next level? Did you know that you don’t need Excel to work with Excel files? Sometimes doing things programmatically is a bit easier than pointing and clicking. Or maybe you need to process a lot of files really fast, over and over again. Powershell automation with Microsoft Excel is possible! In this video you’ll see how you can update Excel workbooks and worksheets with a Powershell script.</summary></entry></feed>